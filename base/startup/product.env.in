# Copyright (c) 2018 LG Electronics, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

# Avoid waiting for coalescing touch events in QQuickWindow
export QML_NO_TOUCH_COMPRESSION=1

# Set atlas texture size to 1MB (512 * 512 * 4)
export QSG_ATLAS_WIDTH=512
export QSG_ATLAS_HEIGHT=512

# Release QImages after creating texture
export QSG_TRANSIENT_IMAGES=1

# Keymap
export QT_QPA_EVDEV_KEYBOARD_PARAMETERS=keymap=@WEBOS_INSTALL_DATADIR@/webos-keymap/webos-keymap.qmap

# Define the compositor extensions that will be loaded
export WEBOS_COMPOSITOR_EXTENSIONS=webos-wayland-extension

# Platform plugin to be used
export WEBOS_COMPOSITOR_PLATFORM=eglfs

# Cursor timeout
export WEBOS_CURSOR_TIMEOUT=5000

# Scale factor for High DPI
export QT_SCALE_FACTOR=1.0

# Display device detection
# TODO: Consider using inotify rather than polling
DRM_DEVICES_EXPECTED=1
DRM_PROBE_RETRY=60
pmlog info "Probing DRM devices ..."
while true; do
    c=0
    for f in /sys/class/drm/card*-*; do
        bn=$(basename $f)
        device=${bn%%-*};    bn=${bn#$device-}
        connector=${bn%%-*}; bn=${bn#$connector-}
        sb=${bn%%-*};        bn=${bn#$sb-}
        id=${bn%%-*}
        enabled=$(cat "$f/enabled")
        status=$(cat "$f/status")
        if [ "$status" == "connected" ]; then
            pmlog debug "DRM device available: $device, $connector$id"
            c=$(expr $c + 1)
        else
            pmlog warning "DRM device unusable: $device, $connector$id ($enabled, $status)"
        fi
    done

    if [ $c -ge $DRM_DEVICES_EXPECTED ]; then
        pmlog info "$c DRM device(s) detected as expected."
        break
    fi

    DRM_PROBE_RETRY=$(expr $DRM_PROBE_RETRY - 1)
    if [ $DRM_PROBE_RETRY -gt 0 ]; then
        pmlog info "$c DRM device(s) detected, expecting $DRM_DEVICES_EXPECTED."
        sleep 1
    else
        pmlog warning "Failed to detect $DRM_DEVICES_EXPECTED DRM device(s). Detected $c only."
        break
    fi
done

# TODO: Generate EGLFS config json file and set related environment variables
#export WEBOS_COMPOSITOR_DISPLAYS=
#export WEBOS_COMPOSITOR_PRIMARY_SCREEN=
#export QT_QPA_EGLFS_CONFIG=
